from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.filters.state import StateFilter

from Data.types.core import Core
from keyboards import moderator_keyboards as mdrt_kb
from keyboards import admin_keyboards as admn_kb
from States.State import ClientStateGroup

import os 
import dotenv

dotenv.load_dotenv()

ModeratorRouter = Router()

@ModeratorRouter.callback_query(F.data == 'moder_create_client')
async def CreateClient(c: CallbackQuery, state: FSMContext):
    await c.message.edit_text(text='–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª', reply_markup=mdrt_kb.get_moderator_menu())
    await state.set_state(ClientStateGroup.create_client)

@ModeratorRouter.message(StateFilter(ClientStateGroup.create_client))
async def CreateClientName(m: Message, state: FSMContext):
    try:
        user_name, user_surname = m.text.split(' ')
    except Exception:
        await m.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª', reply_markup=mdrt_kb.get_moderator_menu())
    else:
        await m.answer(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–ü—Ä–∏–º–µ—Ä: +79724254342)', reply_markup=mdrt_kb.get_moderator_menu())
        await state.update_data(user_name=user_name, user_surname=user_surname)
        await state.set_state(ClientStateGroup.input_number)

@ModeratorRouter.message(StateFilter(ClientStateGroup.input_number))
async def InputNumber(m: Message, state: FSMContext):
    try:
        user_number = int(m.text[1:])
    except Exception:
        await m.answer(text='–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ +79724254342', reply_markup=mdrt_kb.get_moderator_menu())
    else:
        if str(user_number)[0] != '7':
            await m.answer(text='–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ +79724254342', reply_markup=mdrt_kb.get_moderator_menu())
        else:
            data = await state.get_data()
            user_name = data.get('user_name')
            user_surname = data.get('user_surname')
            await m.answer(text=f'–ò–º—è: {user_name}\n–§–∞–º–∏–ª–∏—è: {user_surname}\n–¢–µ–ª–µ—Ñ–æ–Ω: {user_number}\n\n–í—Å–µ –≤–µ—Ä–Ω–æ?',
                        reply_markup=mdrt_kb.confirm_crating_client())
            await state.update_data(user_number=user_number)
        
@ModeratorRouter.callback_query(F.data == 'confirm_crating_client_mdrt')
async def ConfirmCreatingClient(c: CallbackQuery, state:FSMContext):
    data = await state.get_data()
    user_name = data.get('user_name')
    user_surname = data.get('user_surname')
    user_number = data.get('user_number')
    await Core.CreateClient(user_name, user_surname, user_number)
    await c.bot.send_message(
        chat_id=os.getenv('ADMIN'), 
        text=f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {c.from_user.username} —Å–æ–∑–¥–∞–ª –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç—É {user_name} üë®‚Äçüîß',
        reply_markup=admn_kb.get_menu())
    await c.message.edit_text(text=f'–ö–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ {user_name} –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞‚úÖ', reply_markup=mdrt_kb.get_moderator_menu())

@ModeratorRouter.callback_query(F.data == 'moder_find_client')
async def FindClient(c: CallbackQuery):
    await c.message.edit_text(text='–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞', reply_markup=mdrt_kb.find_client_by())

@ModeratorRouter.callback_query(F.data == 'moder_find_client_by_id')
async def FindCLietnByNumber(c: CallbackQuery, state: FSMContext):
    await c.message.edit_text(text='–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞', reply_markup=mdrt_kb.get_moderator_menu())
    await state.set_state(ClientStateGroup.find_client_id)
    await state.update_data(statement='ID')

@ModeratorRouter.callback_query(F.data == 'moder_find_client_by_number')
async def FindCLietnByNumber(c: CallbackQuery, state: FSMContext):
    await c.message.edit_text(text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∏–µ–Ω—Ç–∞ (–ü—Ä–∏–º–µ—Ä +79724254342)', reply_markup=mdrt_kb.get_moderator_menu())
    await state.set_state(ClientStateGroup.find_client_number)
    await state.update_data(statement='NUMBER')

@ModeratorRouter.message(StateFilter(ClientStateGroup.find_client_number))
async def StateFindClient(m: Message, state: FSMContext):
    try:
        number = int(m.text)
    except Exception:
        await m.answer(text='–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è', reply_markup=mdrt_kb.get_moderator_menu())
    else:
        data = await state.get_data()
        statement = data.get('statement')
        user = await Core.FindClient(number, statement)

        if user == False:
            await m.answer(text='–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –µ—â–µ —Ä–∞–∑', reply_markup=mdrt_kb.get_moderator_menu())
        else:
            user_name = user[0]
            user_surname = user[1]
            user_number = user[2]
            user_bonuses = user[3]
            await m.answer(
                text=f'<b>–ò–º—è:</b> {user_name}\n<b>–§–∞–º–∏–ª–∏—è:</b> {user_surname}\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª.:</b> {user_number}\n<b>–ë–æ–Ω—É—Å—ã:</b> {user_bonuses}',
                parse_mode='HTML',
                reply_markup=mdrt_kb.get_menu_client())
            await state.set_state(ClientStateGroup.moderator_panel)
            await state.update_data(user_name=user_name, user_number=user_number)

@ModeratorRouter.message(StateFilter(ClientStateGroup.find_client_id))
async def StateFindClient(m: Message, state: FSMContext):
    try:
        number = int(m.text)
    except Exception:
        await m.answer(text='ID –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è', reply_markup=mdrt_kb.get_moderator_menu())
    else:
        data = await state.get_data()
        statement = data.get('statement')
        user = await Core.FindClient(number, statement)

        if user == False:
            await m.answer(text='–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –µ—â–µ —Ä–∞–∑', reply_markup=mdrt_kb.get_moderator_menu())
        else:
            user_name = user[0]
            user_surname = user[1]
            user_number = user[2]
            user_bonuses = user[3]
            await m.answer(
                text=f'<b>–ò–º—è:</b> {user_name}\n<b>–§–∞–º–∏–ª–∏—è:</b> {user_surname}\n<b>–ù–æ–º–µ—Ä —Ç–µ–ª.:</b> {user_number}\n<b>–ë–æ–Ω—É—Å—ã:</b> {user_bonuses}',
                parse_mode='HTML',
                reply_markup=mdrt_kb.get_menu_client())
            await state.set_state(ClientStateGroup.moderator_panel)
            await state.update_data(user_name=user_name, user_number=user_number)

@ModeratorRouter.callback_query(F.data == 'increase_bonuses_moder')
async def IncreaseBonuses(c: CallbackQuery, state:FSMContext):
    data = await state.get_data()
    user_name = data.get('user_name')
    
    await c.message.edit_text(text=f'–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É —á–µ–∫–∞ {user_name}', 
                              reply_markup=mdrt_kb.get_moderator_menu())
    
    await state.set_state(ClientStateGroup.increase_bonuses_moder)

@ModeratorRouter.message(StateFilter(ClientStateGroup.increase_bonuses_moder))
async def IncreaseBonusesState(m: Message, state: FSMContext):
    data = await state.get_data()
    user_name = data.get('user_name')

    try:
        value = int(m.text) * 0.02
    except Exception:
        await m.answer(text='–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞—é—â–µ–µ 0', reply_markup=mdrt_kb.get_moderator_menu())
    else:
        if value <= 0:
            await m.answer(text='–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0', reply_markup=mdrt_kb.get_moderator_menu())
        else:
            await m.answer(text=f'–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ {value} –±–∞–ª–ª–æ–≤ –∫–ª–∏–µ–Ω—Ç—É {user_name}?', reply_markup=mdrt_kb.confirm_increasing_bonuses())
            await state.set_state(ClientStateGroup.confirm_increasing)
            await state.update_data(value=value)

@ModeratorRouter.callback_query(F.data == 'confirm_increasing_bonuses_moder')
async def ConfirmIncreasingBonuses(c: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    user_name = data.get('user_name')
    user_number = data.get('user_number')
    value = data.get('value')

    await Core.IncreaseBonuses(user_number, value)
    await c.bot.send_message(
        chat_id=os.getenv('ADMIN'), 
        text=f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {c.from_user.username} –Ω–∞—á–∏—Å–ª–∏–ª {value} –±–æ–Ω—É—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç—É {user_name} üë®‚Äçüîß',
        reply_markup=admn_kb.get_menu())
    await c.message.edit_text(text=f'–ë–∞–ª–ª—ã –±—ã–ª–∏ –Ω–∞—á–∏—Å–ª–µ–Ω—ã {user_name}‚úÖ', reply_markup=mdrt_kb.get_moderator_menu())

@ModeratorRouter.callback_query(F.data == 'decrease_bonuses_moder')
async def DecreaseBonuses(c: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    user_name = data.get('user_name')
    # await c.message.edit_text(text=f'–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ —Å–Ω–∏–º–∞–µ–º—ã—Ö –±–∞–ª–ª–æ–≤ —É {user_name}', reply_markup=mdrt_kb.get_moderator_menu())
    # await state.set_state(ClientStateGroup.decrease_bonuses_moder)

    await c.message.edit_text(text=f'–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–Ω—è—Ç–∏–µ –±–∞–ª–ª–æ–≤ —É –∫–ª–∏–µ–Ω—Ç–∞ {user_name}?', reply_markup=mdrt_kb.confirm_decreasing_bonuses())
    await state.set_state(ClientStateGroup.confirm_decreasing)

# @ModeratorRouter.message(StateFilter(ClientStateGroup.decrease_bonuses_moder))
# async def IncreaseBonusesState(m: Message, state: FSMContext):
#     data = await state.get_data()
#     user_name = data.get('user_name')

#     try:
#         value = int(m.text)
#     except Exception:
#         await m.answer(text='–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞—é—â–µ–µ 0', reply_markup=admn_kb.get_menu())
#     else:
#         if value <= 0:
#             await m.answer(text='–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0', reply_markup=admn_kb.get_menu())
#         else:
#             await m.answer(text=f'–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–Ω—è—Ç–∏–µ {value} –±–∞–ª–ª–æ–≤ —É –∫–ª–∏–µ–Ω—Ç–∞ {user_name}?', reply_markup=mdrt_kb.confirm_decreasing_bonuses())
#             await state.set_state(ClientStateGroup.confirm_decreasing)
#             await state.update_data(value=value)

@ModeratorRouter.callback_query(F.data == 'confirm_decreasing_bonuses_moder')
async def ConfirmDecreasingBonuses(c: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    user_name = data.get('user_name')
    user_number = data.get('user_number')

    await Core.DecreaseBonuses(user_number)
    await c.bot.send_message(
        chat_id=os.getenv('ADMIN'), 
        text=f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {c.from_user.username} —Å–Ω—è–ª –±–æ–Ω—É—Å—ã –∫–ª–∏–µ–Ω—Ç—É {user_name} üë®‚Äçüîß',
        reply_markup=admn_kb.get_menu())
    await c.message.edit_text(text=f'–ë–∞–ª–ª—ã —Å–Ω—è—Ç—ã —É {user_name}‚úÖ', reply_markup=mdrt_kb.get_moderator_menu())